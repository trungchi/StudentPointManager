package com.model;
// Generated Jul 8, 2019 11:49:59 PM by Hibernate Tools 5.2.3.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ExamResult generated by hbm2java
 */
@Entity
@Table(name = "ExamResult", schema = "dbo", catalog = "StudentPointManager")
public class ExamResult implements java.io.Serializable {

	private int pointId;
	private Exam exam;
	private User user;
	private double marks;
	private boolean status;
	private String userManager;

	public ExamResult() {
	}

	public ExamResult(int pointId, Exam exam, User user, double marks, boolean status, String userManager) {
		this.pointId = pointId;
		this.exam = exam;
		this.user = user;
		this.marks = marks;
		this.status = status;
		this.userManager = userManager;
	}

	@Id

	@Column(name = "point_id", unique = true, nullable = false)
	public int getPointId() {
		return this.pointId;
	}

	public void setPointId(int pointId) {
		this.pointId = pointId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exam_id", nullable = false)
	public Exam getExam() {
		return this.exam;
	}

	public void setExam(Exam exam) {
		this.exam = exam;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_name", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "marks", nullable = false, precision = 15, scale = 0)
	public double getMarks() {
		return this.marks;
	}

	public void setMarks(double marks) {
		this.marks = marks;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@Column(name = "user_manager", nullable = false, length = 100)
	public String getUserManager() {
		return this.userManager;
	}

	public void setUserManager(String userManager) {
		this.userManager = userManager;
	}

}
